use criterion::{black_box, criterion_group, criterion_main, Criterion};
use schedulib::single_machine::*;
use schedulib::jobs::*;


fn example_200_a() -> (Vec<Time>, Vec<Time>, Vec<Time>) {
	(
		// 200 jobs with randomly chosen times
		// processing times:
		vec![  13,   17,    6,    2,   16,   29,   22,   24,   25,   11,   27,   16,   25,   25,    5,   16,   24,   13,    4,   29,   24,   13,    3,   19,    5,    4,   12,    4,   27,   23,   22,   20,   19,    8,    3,    9,   15,   24,    3,   26,   29,   21,    3,   19,   27,    4,    3,    7,    2,   15,    5,   18,   14,   27,    6,   25,   27,    8,   24,    4,   12,   11,   19,    4,   22,   29,   10,   29,   10,   18,   13,   16,    1,   29,    4,    3,   20,   10,   19,   23,   14,   14,    1,    3,   20,   16,   10,   28,   16,    3,   13,    4,   26,   26,   12,   20,   15,   12,    8,    5,   17,   21,   12,   23,   21,   24,   27,   18,    1,   11,   11,   27,   25,    4,    7,   15,    5,    7,   26,   17,   17,    2,    6,    2,   19,   23,   10,   13,    6,   16,   22,    1,   20,   23,    5,    1,   25,   10,   14,   22,   28,    4,   22,   23,    4,   28,   22,   12,    4,   16,    5,    8,   25,    2,   22,    9,   12,   27,   22,    7,    7,   13,    4,   18,   10,   23,   21,    4,    4,    8,    1,    8,   15,   22,   18,   25,   28,   26,    3,    9,   28,   24,   21,   29,   10,   22,   11,    7,   16,    2,   21,   14,    8,   16,   12,   22,    7,   20,   25,   10],
		// release times:
		vec![1324,  449, 1941, 2398, 2922, 1915,  380, 2894, 1224, 2735, 2531, 2362,  689, 2607, 1856, 1136, 2105, 2140, 1313,  293, 2294, 2191, 1440,  183, 1343,   35, 2041,  480,  146, 2406, 1396, 2736, 1818, 1975,  105, 2251,  606, 2220, 1081, 2734,  519, 2052,   81, 1276, 1778,  325, 2556, 2459,  529, 1998, 2141,  886, 2659, 2864, 2943, 2574, 1800, 2191, 2500, 2474, 2305, 1984, 2654, 1824,  973, 2557, 2839, 1876, 1652, 1107,  589, 1327,  900,  242,  119, 2453,  699,  776, 2742, 1774, 2595, 2111, 1221,  349, 1725, 1864, 1285, 2831, 2461, 1581, 2880, 1325,  664, 1750, 2427,  470,  703, 2169, 1928, 2257, 2969, 2239,  252,  557,  139,  463, 1099, 2593, 2759, 2222, 2318, 2411,  115,  174, 2408, 2038, 2342, 1487, 1595,  790,  454, 1797, 2893,  653,  674,  642,  477, 2817, 1798, 2140, 2586, 1302,  599, 2004, 2227, 1868, 1143,  631, 1818, 2835,   48, 1084, 2183, 2097, 2028, 1015,  898,  142,  453, 2764, 2065, 2904, 1062,  138,  895,  124, 1988,  332, 1878,  560, 1121, 1992,  693,  544, 1168,  889, 2793, 1665,  380, 1824,  477,   69, 2688, 2863, 1991, 2295, 1702, 2534, 1816,  996, 1935,   48, 2886,  239,  632,  623, 2703, 2559, 1471, 2924,  629, 1258,  596, 1913, 1749, 1927, 1500, 2332,  824, 2924],
		// due times:
		vec![2843, 1751, 1729, 2279, 1523, 1534, 2497, 2193, 1617, 2090, 1996, 2029, 1728, 2885, 1777, 2237, 2251, 2193, 1960, 2115, 2088, 1998, 2886, 1985, 1826, 1572, 2946, 2644, 2229, 2271, 1933, 2504, 1964, 2027, 2900, 1531, 2703, 2159, 1750, 1780, 2855, 1607, 2635, 1899, 1904, 2415, 2574, 2457, 2982, 1608, 1849, 2306, 2413, 2231, 1560, 2623, 2200, 2959, 2625, 2215, 2302, 1726, 2871, 2131, 2843, 1605, 2148, 2020, 2821, 2664, 1707, 2709, 1820, 2587, 2158, 2461, 1973, 2722, 2946, 1840, 1625, 2765, 2525, 1506, 1903, 1613, 1877, 2741, 1619, 2253, 2238, 1666, 2975, 1532, 2103, 2203, 2938, 2438, 2740, 2313, 2226, 1784, 1570, 1540, 2351, 2786, 2272, 1562, 2166, 1536, 2719, 1731, 1984, 2005, 2648, 2726, 2575, 1810, 1558, 2596, 2596, 2622, 2375, 2962, 1559, 2124, 1784, 2796, 1940, 2426, 1906, 1725, 2389, 1793, 1517, 2600, 1586, 2411, 1947, 2168, 1826, 2876, 2893, 2576, 2797, 2817, 1814, 1774, 2335, 1847, 2454, 1795, 2096, 1507, 1827, 1936, 2902, 1611, 1549, 1664, 2775, 2013, 2999, 2109, 2184, 1556, 2324, 2197, 1745, 2041, 2278, 2102, 2106, 2964, 2124, 2463, 2845, 1509, 1793, 2566, 1803, 1667, 1731, 1663, 2298, 2850, 1779, 2441, 2272, 1745, 1606, 2256, 2932, 2665, 2432, 2944, 2078, 2008, 2527, 2920],
	)
}

fn example_500_b() -> (Vec<Time>, Vec<Time>) {
	(
		// 500 jobs with randomly chosen times
		// processing times:
		vec![46, 48, 20, 22, 1, 23, 30, 49, 36, 20, 13, 47, 11, 37, 25, 50, 35, 2, 34, 8, 35, 38, 5, 35, 33, 16, 2, 3, 28, 24, 48, 37, 20, 16, 29, 31, 8, 19, 13, 32, 20, 28, 37, 5, 23, 24, 39, 1, 37, 47, 17, 39, 3, 35, 9, 5, 36, 46, 1, 27, 50, 40, 42, 44, 16, 7, 23, 27, 10, 22, 39, 44, 28, 48, 35, 37, 26, 24, 32, 5, 26, 31, 22, 50, 50, 28, 34, 17, 38, 49, 10, 15, 40, 25, 23, 12, 34, 40, 20, 7, 16, 2, 34, 4, 3, 16, 20, 38, 6, 31, 10, 41, 32, 31, 43, 46, 29, 22, 13, 13, 44, 24, 15, 36, 23, 17, 7, 11, 23, 48, 27, 6, 1, 19, 5, 6, 7, 30, 34, 1, 48, 18, 20, 14, 26, 41, 50, 28, 7, 25, 10, 8, 39, 44, 42, 23, 29, 31, 10, 22, 33, 37, 2, 15, 41, 18, 34, 18, 28, 45, 21, 34, 27, 14, 1, 9, 6, 43, 44, 45, 5, 40, 48, 6, 48, 10, 36, 31, 26, 39, 44, 37, 7, 47, 46, 46, 31, 5, 38, 28, 32, 28, 3, 44, 14, 2, 20, 19, 30, 29, 28, 8, 31, 44, 28, 40, 28, 46, 2, 4, 9, 25, 13, 50, 19, 22, 27, 18, 27, 16, 6, 21, 38, 35, 37, 24, 48, 11, 15, 26, 30, 8, 38, 28, 13, 48, 17, 45, 29, 33, 36, 8, 32, 14, 23, 2, 29, 23, 48, 31, 28, 21, 17, 18, 4, 46, 25, 10, 38, 30, 16, 1, 40, 9, 20, 17, 31, 25, 12, 46, 2, 46, 42, 50, 8, 36, 28, 4, 18, 44, 32, 29, 13, 33, 48, 4, 22, 45, 6, 15, 35, 49, 31, 8, 44, 42, 31, 25, 48, 22, 16, 6, 42, 19, 32, 49, 4, 17, 21, 38, 35, 2, 4, 45, 40, 28, 13, 33, 7, 17, 28, 20, 21, 15, 22, 50, 25, 4, 13, 5, 10, 47, 4, 8, 5, 30, 10, 26, 17, 19, 38, 18, 48, 13, 34, 34, 31, 4, 23, 11, 47, 28, 7, 19, 47, 9, 21, 22, 26, 14, 27, 24, 4, 8, 13, 30, 22, 30, 39, 8, 7, 41, 4, 34, 1, 23, 14, 2, 21, 13, 11, 5, 29, 32, 49, 23, 3, 11, 4, 5, 14, 34, 28, 48, 40, 30, 47, 26, 40, 3, 34, 35, 14, 5, 32, 42, 45, 17, 31, 6, 15, 24, 22, 19, 43, 44, 37, 41, 8, 11, 49, 42, 15, 21, 5, 14, 50, 15, 1, 30, 35, 41, 50, 48, 19, 12, 21, 43, 24, 33, 41, 20, 23, 36, 39, 50, 3, 28, 15, 35, 49, 38, 27, 35, 29, 7, 26, 36, 35, 6, 42, 37, 50, 11, 2, 31, 34, 44, 10, 46, 25, 18, 4, 19, 11, 31, 42, 17, 27, 48, 36, 7, 1, 8, 42, 47, 36, 46, 36, 37 ],
		// due times:
		vec![9379, 272, 6150, 7378, 7232, 7992, 8554, 7008, 5455, 9534, 5512, 5583, 3933, 859, 8532, 1984, 7541, 1837, 1109, 1311, 3483, 3950, 7544, 2622, 6729, 1870, 8498, 5776, 4185, 3267, 70, 5732, 415, 3936, 3126, 2647, 5123, 2521, 3418, 4657, 8901, 5905, 7864, 4430, 9189, 9712, 2867, 2450, 6516, 8586, 2445, 6955, 5744, 100, 8036, 7769, 8657, 206, 5181, 3391, 1061, 6101, 8479, 566, 9036, 4387, 8389, 385, 5110, 7753, 6382, 4406, 8966, 3545, 9963, 7411, 4749, 7078, 1898, 9582, 8887, 7177, 3803, 7165, 7041, 2938, 4871, 5799, 880, 7741, 9356, 6337, 7306, 7735, 661, 3028, 5272, 8898, 6307, 7320, 8444, 6071, 8074, 9145, 35, 1638, 7133, 2402, 2825, 7547, 2309, 8831, 8611, 5412, 5439, 7838, 5991, 9465, 6038, 5936, 802, 2762, 1887, 9639, 9877, 6954, 2741, 3199, 9878, 8107, 4577, 1997, 7211, 554, 3275, 310, 690, 4467, 78, 4017, 5124, 971, 3395, 6638, 3192, 7893, 326, 8658, 2689, 4052, 5812, 1105, 5422, 7082, 5152, 7884, 7119, 1526, 6608, 7893, 8264, 4765, 2504, 8345, 2615, 9717, 7179, 8163, 5300, 4899, 5420, 4369, 2214, 1161, 1242, 8013, 4633, 4069, 1528, 44, 4529, 8901, 5778, 1570, 6810, 4059, 9973, 7770, 1040, 569, 6251, 980, 6663, 9930, 9334, 1857, 5831, 808, 5891, 1861, 8130, 5738, 9060, 9774, 3944, 163, 9012, 3404, 7573, 336, 5530, 8774, 5728, 8789, 3178, 6905, 4420, 291, 4609, 7417, 3687, 7078, 4814, 2671, 1412, 7261, 3600, 2589, 392, 2168, 7655, 3975, 6849, 4126, 1613, 2865, 9217, 7374, 3849, 5642, 3580, 9843, 7782, 9611, 3401, 898, 5501, 5253, 1281, 1677, 4289, 2461, 9681, 4451, 4645, 9070, 920, 3579, 4714, 4912, 4358, 4580, 1534, 9307, 2481, 4821, 1500, 9675, 8910, 900, 5479, 924, 5324, 6651, 6715, 4757, 588, 9085, 4016, 4158, 8954, 4067, 2220, 3340, 7189, 438, 3167, 222, 2337, 7071, 1900, 1219, 3684, 9342, 9330, 7551, 4170, 2958, 6671, 1049, 42, 9726, 2498, 8965, 992, 3502, 6363, 7514, 6309, 7297, 6796, 1366, 6026, 7229, 4857, 5542, 1039, 1427, 7127, 3690, 491, 4910, 4663, 1532, 191, 4681, 637, 299, 1976, 4817, 5186, 4537, 9893, 5733, 9549, 3338, 643, 5894, 6124, 5214, 7618, 1619, 7845, 9094, 9834, 4232, 7148, 8392, 6161, 7866, 2098, 5895, 5630, 4437, 2971, 4253, 529, 657, 1394, 6240, 4781, 3641, 5162, 791, 4008, 9970, 2764, 5903, 2573, 1979, 2110, 3077, 8795, 2551, 2721, 9972, 9980, 2804, 994, 5738, 9860, 3291, 1329, 65, 2138, 3913, 6927, 5831, 8586, 5588, 8894, 2117, 2443, 1843, 4943, 4088, 3953, 634, 8230, 205, 5630, 7597, 4332, 2008, 3732, 1512, 5998, 947, 582, 5636, 5767, 1338, 3281, 2630, 2495, 1389, 5179, 4133, 8941, 3804, 9265, 7326, 7738, 4266, 5753, 4909, 2600, 9812, 9185, 7522, 6940, 6308, 8379, 5388, 9665, 8893, 3106, 3404, 2427, 6395, 2306, 7679, 5264, 983, 1408, 8707, 1052, 9518, 5679, 7569, 7128, 7334, 6129, 7462, 4526, 4625, 737, 6894, 6317, 6893, 7279, 7045, 3634, 1981, 733, 1266, 9523, 3438, 1911, 6364, 8021, 3423, 7481, 8317, 5257, 4787, 6415, 9009, 2676, 2926, 986, 101, 594, 9765, 2892, 9663, 2279, 8944, 7067, 4422, 5536, 6623, 377, 6186, 7318, 9444, 1045, 443, 511, 3329],
	)		
}

fn benchmark_carlier(c: &mut Criterion) {
	let (p, r, d) = example_200_a();
	c.bench_function("carlier", |b| b.iter(|| {
		let schedule = carlier(black_box(&p), black_box(&r), black_box(&d));
		assert_eq!(schedule.max_lateness(&d), 1415);
	}));
}

fn benchmark_hodgson(c: &mut Criterion) {
	let (p, d) = example_500_b();
	c.bench_function("hodgson", |b| b.iter(|| {
		let schedule = schedule_hodgson(black_box(&p), black_box(&d));
		assert_eq!(schedule.num_tardy(&d), 58);
	}));
}

criterion_group!(benches, benchmark_carlier, benchmark_hodgson);


criterion_main!(benches);
